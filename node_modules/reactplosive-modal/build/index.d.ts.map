{"mappings":";ACWA,aAAa;IACX,KAAK,CAAC,EAAE,SAAS,CAAC;IAClB,QAAQ,EAAE,SAAS,CAAC;IACpB,SAAS,EAAE,OAAO,CAAC;IACnB,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI,CAAC;IACvC,mBAAmB,CAAC,EAAE,OAAO,CAAC;CAC/B,CAAC;AAEF,QAAA,MAAM,iBAAiB,yEAOpB,KAAK,gBAsDP,CAAC;AAgBF,eAAe,iBAAiB,CAAC","sources":["src/components/ReactplosiveModal/src/components/ReactplosiveModal/explosion-gif.ts","src/components/ReactplosiveModal/src/components/ReactplosiveModal/index.tsx","src/components/ReactplosiveModal/index.tsx"],"sourcesContent":[null,null,"import React, { ReactNode, useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport explosionGif from \"./explosion-gif\";\n\nconst DEFAULTS = {\n  width: \"500px\",\n  modalVisibilityTimeout: 400,\n  outsideClickEnabled: true,\n  closeIconColor: \"rgba(0, 0, 0, 0.2)\",\n};\n\ntype Props = {\n  title?: ReactNode;\n  children: ReactNode;\n  isVisible: boolean;\n  width?: string;\n  onClose: (visibility: boolean) => void;\n  outsideClickEnabled?: boolean;\n};\n\nconst ReactplosiveModal = ({\n  title,\n  children,\n  isVisible,\n  onClose,\n  outsideClickEnabled = DEFAULTS.outsideClickEnabled,\n  width = DEFAULTS.width,\n}: Props) => {\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(\n      () => setActive(isVisible),\n      DEFAULTS.modalVisibilityTimeout\n    );\n    return () => clearTimeout(timeout);\n  }, [isVisible]);\n\n  return (\n    <div\n      className={\n        isVisible\n          ? \"reactplosive-modal reactplosive-modal--active\"\n          : \"reactplosive-modal\"\n      }\n    >\n      <div\n        className={\n          active\n            ? \"reactplosive-modal-container reactplosive-modal-container---active\"\n            : \"reactplosive-modal-container\"\n        }\n        style={{\n          width,\n        }}\n      >\n        <button\n          className=\"reactplosive-modal-close\"\n          onClick={() => onClose(false)}\n        >\n          <CloseIcon />\n        </button>\n        {title ? (\n          <div className=\"reactplosive-modal-header\">\n            <div className=\"reactplosive-modal-header-title\">{title}</div>\n          </div>\n        ) : null}\n\n        <div className={\"reactplosive-modal-content\"}>{children}</div>\n      </div>\n      <div\n        className=\"reactplosive-modal-bg\"\n        onClick={() => (outsideClickEnabled ? onClose(false) : null)}\n      >\n        <img\n          className=\"reactplosive-modal-explosion-gif\"\n          src={isVisible ? explosionGif : \"\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst CloseIcon = ({ color = DEFAULTS.closeIconColor }: { color?: string }) => {\n  return (\n    <svg\n      width=\"12\"\n      height=\"12\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <line x1=\"1\" y1=\"11\" x2=\"11\" y2=\"1\" stroke={color} strokeWidth=\"2\" />\n      <line x1=\"1\" y1=\"1\" x2=\"11\" y2=\"11\" stroke={color} strokeWidth=\"2\" />\n    </svg>\n  );\n};\n\nexport default ReactplosiveModal;\n"],"names":[],"version":3,"file":"index.d.ts.map"}